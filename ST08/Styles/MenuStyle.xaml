<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
                   
                   

    <!--Styl pre menu-->
    <Style x:Key="menuStyle1" TargetType="Menu">
        <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource MenuFontSize}"/>
        <Setter Property="Background" Value="{DynamicResource TransparentBrush}"/>
    </Style>

    

    <!--Styl pre menuItem rozbalovaci-menu MA SUBITEMY, najvyssia uroven-->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border Background="{DynamicResource MenuButtonLightEffectBrush}" BorderThickness="1" BorderBrush="Transparent" x:Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3"/>
                        <RowDefinition/>
                        <RowDefinition Height="3"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Column="1" Grid.Row="1" Background="{DynamicResource MenuButtonBackgroundBrush}" Padding="0" x:Name="border2">
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                    </Border>
                    <!--prava a dolna cast efektu-->
                    <Border Grid.Column="1" Grid.Row="2" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA1"/>
                    <Border Grid.Column="2" Grid.Row="1" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA2"/>
                    <Border Grid.Column="2" Grid.Row="2" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA3"/>
                    <Polygon Points="0,3 3,3, 3,0" Grid.Column="0" Grid.Row="2" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA4" StrokeThickness="0"/>
                    <Polygon Points="0,3 3,3 3,0" Grid.Column="2" Grid.Row="0" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA5" StrokeThickness="0"/>

                    <!--lava a horna cast efektu-->
                    <Border Grid.Column="1" Grid.Row="0" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB1" Visibility="Hidden"/>
                    <Border Grid.Column="0" Grid.Row="1" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB2" Visibility="Hidden"/>
                    <Border Grid.Column="0" Grid.Row="0" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB3" Visibility="Hidden"/>
                    <Polygon Points="0,0 0,3 3,0" Grid.Column="0" Grid.Row="2" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB4" Visibility="Hidden" StrokeThickness="0"/>
                    <Polygon Points="0,0 0,3 3,0" Grid.Column="2" Grid.Row="0" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB5" Visibility="Hidden" StrokeThickness="0"/>
                </Grid>
            </Border>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                <ContentControl  x:Name="SubMenuBorder" IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                    </Grid>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <!--ak je mouseover-->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
            </Trigger>
            <!--pri kliknuti na menu item sa urobi efekt ako pri kliknuti na button-->
            <Trigger Property="MenuItem.IsPressed" Value="True">
                <Setter TargetName="groupA1" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA2" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA3" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA4" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA5" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupB1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB4" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB5" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="groupA1" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA2" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA3" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA4" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA5" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupB1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB4" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB5" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border2" Property="Background" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Styl pre menuItem bez rozbalovania - NEMA SUBMENU itemy, najvyssia uroven-->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Border Background="{DynamicResource MenuButtonLightEffectBrush}" BorderThickness="1" BorderBrush="Transparent" x:Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3"/>
                        <RowDefinition/>
                        <RowDefinition Height="3"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Column="1" Grid.Row="1" Background="{DynamicResource MenuButtonBackgroundBrush}" Padding="0" Name="border2">
                        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                    </Border>
                    <!--prava a dolna cast efektu-->
                    <Border Grid.Column="1" Grid.Row="2" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA1"/>
                    <Border Grid.Column="2" Grid.Row="1" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA2"/>
                    <Border Grid.Column="2" Grid.Row="2" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA3"/>
                    <Polygon Points="0,3 3,3, 3,0" Grid.Column="0" Grid.Row="2" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA4" StrokeThickness="0"/>
                    <Polygon Points="0,3 3,3 3,0" Grid.Column="2" Grid.Row="0" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupA5" StrokeThickness="0"/>
                    <!--lava a horna cast efektu-->

                    <Border Grid.Column="1" Grid.Row="0" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB1" Visibility="Hidden"/>
                    <Border Grid.Column="0" Grid.Row="1" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB2" Visibility="Hidden"/>
                    <Border Grid.Column="0" Grid.Row="0" Background="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB3" Visibility="Hidden"/>
                    <Polygon Points="0,0 0,3 3,0" Grid.Column="0" Grid.Row="2" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB4" Visibility="Hidden" StrokeThickness="0"/>
                    <Polygon Points="0,0 0,3 3,0" Grid.Column="2" Grid.Row="0" Fill="{DynamicResource MenuButtonDarkEffectBrush}" Name="groupB5" Visibility="Hidden" StrokeThickness="0"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <!--ak je mouseover-->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                <!--<Setter TargetName="Border" Property="BorderThickness" Value="1"/>-->
            </Trigger>
            <!--pri kliknuti na menu item sa urobi efekt ako pri kliknuti na button-->
            <Trigger Property="MenuItem.IsPressed" Value="True">
                <Setter TargetName="groupA1" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA2" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA3" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA4" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupA5" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="groupB1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB4" Property="Visibility" Value="Visible"/>
                <Setter TargetName="groupB5" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border2" Property="Background" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Styl pre menuItem v rozbalenom zozname, ktory sa da rozbalovat dalej-->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg" Fill="Transparent" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}" Visibility="Collapsed"
                           VerticalAlignment="Center"/>
                <Path Grid.Column="5" Fill="Black" Data= "M 0 8 L 8 4 L 0 0 Z" VerticalAlignment="Center" Margin="3"/>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                <ContentControl x:Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent,TypeInTargetAssembly={x:Type FrameworkElement}}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                    </Grid>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Stroke" TargetName="InnerBorder" Value="Black"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Styl pre menuItem v rozbalenom zozname, ktory sa nerozbaluje-->
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="True">
            <Rectangle x:Name="Bg" Fill="Transparent" RadiusY="2" RadiusX="2" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" Stroke="Transparent" StrokeThickness="1"/>
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Text="{TemplateBinding InputGestureText}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Stroke" TargetName="InnerBorder" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <!--Styl pre menuItem, priraduje template podla roly menuItem-->
    <Style  TargetType="{x:Type MenuItem}" x:Key="menuItemBasic">
        <Setter Property="Height" Value="35"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3,2,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3,2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>
